{"version":3,"sources":["components/atoms/Book.tsx","components/organisms/BookShelf.tsx","components/organisms/MainBox.tsx","components/atoms/HomeIcon.tsx","redux/actions/counterActions.tsx","components/molecules/HeaderBar.tsx","components/molecules/SideMenuIcons.tsx","components/molecules/SideBar.tsx","components/organisms/Header.tsx","App.tsx","serviceWorker.ts","redux/reducers/isSideBarOpenReducer.tsx","redux/reducers/booksReducer.tsx","redux/actions/booksActions.tsx","redux/store.tsx","index.tsx"],"names":["Book","BookContainer","status","this","props","alt","title","src","img","React","Component","styled","div","BookShelf","items","useSelector","state","books","map","book","key","id","style","padding","display","imageUrl","useStyles","makeStyles","theme","createStyles","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","paddingTop","marginLeft","contentShift","easeOut","enteringScreen","MainBox","classes","isOpen","css","clsx","className","path","component","HomeIcon","SvgIcon","d","OPEN","CLOSE","root","appBar","zIndex","drawer","appBarShift","width","menuButton","marginRight","hide","spacing","HeaderBar","dispatch","useDispatch","AppBar","position","Toolbar","IconButton","color","aria-label","onClick","type","edge","to","Button","SideMenuIcons","List","ListItem","button","ListItemIcon","ListItemText","primary","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","SideBar","useTheme","Drawer","variant","paper","direction","Divider","Header","App","Boolean","window","location","hostname","match","isSideBarOpenReducer","action","initialState","booksReducer","reducer","combineReducers","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2931a85.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  title?: string;\n  status?: string;\n  img?: string;\n}\ninterface IState {}\n\nclass Book extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <BookContainer status={this.props.status}>\n        <img alt={this.props.title} src={this.props.img} />\n      </BookContainer>\n    );\n  }\n}\n\nexport default Book;\n\nconst BookContainer = styled.div`\n  cursor: pointer;\n  display: inline-block;\n  width: 150px;\n  height: 220px;\n  position: relative;\n  background: ${(props: IProps) =>\n    props.status === \"貸出中\" ? \"black\" : \"white\"};\n  z-index: 1;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 9px 20px 0 rgba(0, 0, 0, 0.25);\n  overflow: hidden;\n  transition: box-shadow 0.2s linear;\n  img {\n    width: inherit;\n    height: inherit;\n    transform-origin: 0 50%;\n    transform: rotateY(0);\n    transition: all 0.45s ease;\n  }\n  &:hover {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.25),\n      0 9px 20px 0 rgba(0, 0, 0, 0.45);\n  }\n  &:hover img {\n    transform: rotateY(-50deg);\n    box-shadow: 1px 3px 5px 5px rgba(0, 0, 0, 0.2);\n  }\n  &::after,\n  &::before {\n    content: \"\";\n    display: block;\n    width: inherit;\n    height: inherit;\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    background: white;\n    border: 1px solid #d9d9d9;\n  }\n  &::before {\n    left: -3px;\n  }\n  &::after {\n    left: -6px;\n  }\n`;\n","import React from \"react\";\nimport Book from \"../atoms/Book\";\nimport { useSelector } from \"react-redux\";\n\ninterface IBook {\n  id?: string;\n  title?: string;\n  imageUrl?: string;\n  status?: string;\n}\n\nfunction BookShelf() {\n  const books = useSelector((state: any) => state.books);\n  const items = books.map((book: IBook) => (\n    <div key={book.id} style={{ padding: \"30px\", display: \"inline-block\" }}>\n      <Book img={book.imageUrl} title={book.title} status={book.status} />\n    </div>\n  ));\n  return <>{items}</>;\n}\n\nexport default BookShelf;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { useSelector } from \"react-redux\";\nimport BookShelf from \"./BookShelf\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      paddingTop: 50,\n      marginLeft: 0\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    }\n  })\n);\n\nfunction MainBox() {\n  const classes = useStyles();\n  const isOpen = useSelector((state: any) => state.isOpen);\n  const css = clsx(classes.content, { [classes.contentShift]: isOpen });\n  return (\n    <div className={css}>\n      <Switch>\n        <Route path=\"/books\" component={BookShelf} />\n        <Route path=\"/\">\n          <div style={{ padding: 100 }}>Hey there this is Home!</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default MainBox;\n","import React from \"react\";\nimport { SvgIcon } from \"@material-ui/core\";\n\nexport function HomeIcon(props: any) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n","export const OPEN = \"OPEN\";\nexport const CLOSE = \"CLOSE\";\n\nexport interface IMenuStatusReducerAction {\n  type: typeof OPEN | typeof CLOSE;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, IconButton, Button } from \"@material-ui/core\";\nimport { HomeIcon } from \"../atoms/HomeIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { OPEN } from \"../../redux/actions/counterActions\";\n\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    hide: {\n      display: \"none\"\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  })\n);\n\nexport default function HeaderBar() {\n  const classes = useStyles();\n  const isOpen = useSelector((state: any) => state.isOpen);\n  const dispatch = useDispatch();\n  const open = () => {\n    dispatch({ type: OPEN });\n  };\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: isOpen\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => {\n            open();\n          }}\n          edge=\"start\"\n          className={clsx(classes.menuButton, {\n            [classes.hide]: isOpen\n          })}\n        >\n          <MenuIcon style={{ color: \"white\" }} />\n        </IconButton>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <Link to=\"/\">\n            <HomeIcon style={{ color: \"white\" }} />\n          </Link>\n        </IconButton>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const SideMenuIcons: React.FC = () => {\n  return (\n    <List>\n      <ListItem button key={\"Books\"}>\n        <ListItemIcon>\n          <Link to=\"/books\">\n            <ImportContactsIcon />\n          </Link>\n        </ListItemIcon>\n        <ListItemText primary={\"Books\"} />\n      </ListItem>\n    </List>\n  );\n};\n","import React from \"react\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { SideMenuIcons } from \"./SideMenuIcons\";\nimport { Drawer, IconButton, Divider } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\nimport {\n  createStyles,\n  makeStyles,\n  useTheme,\n  Theme\n} from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CLOSE } from \"../../redux/actions/counterActions\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9) + 1\n      }\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  })\n);\n\nexport default function SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isOpen = useSelector((state: any) => state.isOpen);\n  const dispatch = useDispatch();\n  const close = () => {\n    dispatch({ type: CLOSE });\n  };\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: isOpen,\n        [classes.drawerClose]: !isOpen\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: isOpen,\n          [classes.drawerClose]: !isOpen\n        })\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton\n          onClick={() => {\n            close();\n          }}\n        >\n          {theme.direction === \"rtl\" ? (\n            <ChevronRightIcon />\n          ) : (\n            <ChevronLeftIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <SideMenuIcons />\n      <Divider />\n    </Drawer>\n  );\n}\n","import React from \"react\";\nimport HeaderBar from \"../molecules/HeaderBar\";\nimport SideBar from \"../molecules/SideBar\";\n\nexport default function Header() {\n  return (\n    <div>\n      <HeaderBar />\n      <SideBar />\n    </div>\n  );\n}\n","import React from \"react\";\nimport MainBox from \"./components/organisms/MainBox\";\nimport Header from \"./components/organisms/Header\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n// import IsbnScanner from \"./organisms/IsbnScanner\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    }\n  })\n);\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <MainBox />\n      {/* <IsbnScanner /> */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  IMenuStatusReducerAction,\n  OPEN,\n  CLOSE\n} from \"../actions/counterActions\";\n\nconst isSideBarOpenReducer = (\n  state = false,\n  action: IMenuStatusReducerAction\n) => {\n  switch (action.type) {\n    case OPEN:\n      return true;\n    case CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isSideBarOpenReducer;\n","import { IBooksReducerAction, ADD } from \"../actions/booksActions\";\n\nconst initialState = [\n  {\n    id: \"123456789\",\n    title: \"web api the good parts\",\n    imageUrl:\n      \"https://images-na.ssl-images-amazon.com/images/I/51GHwTNJgSL._SX389_BO1,204,203,200_.jpg\",\n    status: \"貸出中\"\n  },\n  {\n    id: \"vcd67uiklp098uyh\",\n    title: \"デザインパターン\",\n    imageUrl:\n      \"https://images-na.ssl-images-amazon.com/images/I/51QsmvkObML._SX392_BO1,204,203,200_.jpg\"\n  },\n  {\n    id: \"nfrtyu87tghnhji\",\n    title: \"WebDBPress\",\n    imageUrl:\n      \"https://images-na.ssl-images-amazon.com/images/I/51Y3LfVnduL._SX352_BO1,204,203,200_.jpg\"\n  }\n];\nconst booksReducer = (state = initialState, action: IBooksReducerAction) => {\n  switch (action.type) {\n    case ADD:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","export const ADD = \"ADD\";\n\nexport interface IBooksReducerAction {\n  type: typeof ADD;\n}\n","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport isSideBarOpenReducer from \"./reducers/isSideBarOpenReducer\";\nimport booksReducer from \"./reducers/booksReducer\";\nexport const reducer = combineReducers({\n  isOpen: isSideBarOpenReducer,\n  books: booksReducer\n});\nexport default createStore(reducer);\n\nexport interface IRootState {\n  count: number;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}